;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("FIle" "File" nil :count 10)
    ("WIth" "With" nil :count 8)
    ("aand" "and" nil :count 1)
    ("aboyut" "about" nil :count 1)
    ("abstraciton" "abstraction" nil :count 1)
    ("accoutns" "accounts" nil :count 1)
    ("acocunt" "account" nil :count 1)
    ("acutally" "actually" nil :count 1)
    ("additioanl" "additional" nil :count 1)
    ("additonal" "additional" nil :count 1)
    ("adminsistrator" "administrator" nil :count 1)
    ("adn" "and" nil :count 41)
    ("adversay" "adversary" nil :count 3)
    ("ahve" "have" nil :count 11)
    ("algorihms" "algorithms" nil :count 2)
    ("algorihtms" "algorithms" nil :count 3)
    ("aline" "alone" nil :count 2)
    ("aling" "along" nil :count 1)
    ("alkready" "already" nil :count 1)
    ("alows" "allows" nil :count 1)
    ("amoutn" "amount" nil :count 2)
    ("anabled" "enabled" nil :count 1)
    ("anser" "answer" nil :count 1)
    ("answser" "answer" nil :count 1)
    ("antyhing" "anything" nil :count 1)
    ("anywehre" "anywhere" nil :count 1)
    ("anywya" "anyway" nil :count 2)
    ("aobut" "about" nil :count 10)
    ("apaprently" "apparently" nil :count 1)
    ("apears" "appears" nil :count 1)
    ("apend" "append" nil :count 1)
    ("apparnetly" "apparently" nil :count 3)
    ("appication" "application" nil :count 1)
    ("applicaiton" "application" nil :count 4)
    ("applicatioins" "applications" nil :count 1)
    ("applicatoins" "applications" nil :count 1)
    ("applicaton" "application" nil :count 2)
    ("approrpiate" "appropriate" nil :count 1)
    ("apsted" "pasted" nil :count 1)
    ("aready" "already" nil :count 1)
    ("arleady" "already" nil :count 1)
    ("aroudn" "around" nil :count 1)
    ("arrial" "arrival" nil :count 1)
    ("artifactoyr" "artifactory" nil :count 1)
    ("artifcts" "artifacts" nil :count 1)
    ("artificailly" "artificially" nil :count 1)
    ("arugment" "argument" nil :count 1)
    ("assingment" "assignment" nil :count 1)
    ("assocaited" "associated" nil :count 1)
    ("asynchtonous" "Asynchronous" nil :count 1)
    ("attakcs" "attacks" nil :count 1)
    ("attepnt" "attempt" nil :count 1)
    ("attmepts" "attempts" nil :count 1)
    ("atuomatically" "automatically" nil :count 2)
    ("augmentaiton" "augmentation" nil :count 1)
    ("australia" "Australia" nil :count 3)
    ("authenticaiton" "authentication" nil :count 1)
    ("balanded" "balanced" nil :count 1)
    ("baloon" "balloon" nil :count 1)
    ("batrch" "batch" nil :count 1)
    ("becasue" "because" nil :count 11)
    ("beelong" "belong" nil :count 1)
    ("belinging" "belonging" nil :count 1)
    ("beter" "better" nil :count 2)
    ("bigfixes" "bugfixes" nil :count 1)
    ("binaties" "binaries" nil :count 1)
    ("blansidhments" "blandishments" nil :count 1)
    ("blodk" "block" nil :count 1)
    ("boyd" "body" nil :count 1)
    ("brnach" "branch" nil :count 2)
    ("brreaking" "breaking" nil :count 1)
    ("buildsript" "buildscript" nil :count 1)
    ("builidng" "building" nil :count 2)
    ("buisness" "business" nil :count 1)
    ("byt" "by" nil :count 13)
    ("byut" "but" nil :count 1)
    ("cahnge" "change" nil :count 1)
    ("calng" "clang" nil :count 2)
    ("candiate" "candidate" nil :count 1)
    ("cauisng" "causing" nil :count 1)
    ("chagnes" "changes" nil :count 1)
    ("charactrer" "character" nil :count 1)
    ("checkinf" "checking" nil :count 2)
    ("checkng" "checking" nil :count 1)
    ("chekc" "check" nil :count 2)
    ("chooose" "choose" nil :count 1)
    ("classificaiton" "classification" nil :count 2)
    ("clinet" "client" nil :count 4)
    ("cloine" "clone" nil :count 9)
    ("closeing" "closing" nil :count 1)
    ("cna" "can" nil :count 12)
    ("commadn" "command" nil :count 5)
    ("commadns" "commands" nil :count 1)
    ("commnads" "commands" nil :count 1)
    ("communicaiton" "communication" nil :count 1)
    ("complidcated" "complicated" nil :count 1)
    ("compoennts" "components" nil :count 1)
    ("conatin" "contain" nil :count 2)
    ("conditiions" "conditions" nil :count 1)
    ("conditioanl" "conditional" nil :count 1)
    ("conditioins" "conditions" nil :count 1)
    ("confition" "condition" nil :count 1)
    ("connectinos" "connections" nil :count 1)
    ("consdier" "consider" nil :count 1)
    ("constrol" "control" nil :count 1)
    ("contain" "contain" nil :count 48)
    ("contian" "contain" nil :count 2)
    ("contians" "contains" nil :count 1)
    ("contitutes" "constitutes" nil :count 1)
    ("contnets" "contents" nil :count 1)
    ("contrils" "controls" nil :count 1)
    ("conundeum" "conundrum" nil :count 1)
    ("coonstruct" "construct" nil :count 1)
    ("corresponsing" "corresponding" nil :count 1)
    ("cosnt" "const" nil :count 8)
    ("couse" "course" nil :count 1)
    ("cpecify" "specify" nil :count 1)
    ("craeting" "creating" nil :count 1)
    ("crashign" "crashing" nil :count 1)
    ("currenly" "currently" nil :count 1)
    ("currnet" "current" nil :count 1)
    ("currnetly" "currently" nil :count 1)
    ("decisoin" "decision" nil :count 1)
    ("decison" "decision" nil :count 1)
    ("definiltey" "definitely" nil :count 1)
    ("definitiion" "definition" nil :count 1)
    ("defualt" "default" nil :count 1)
    ("deletino" "deletion" nil :count 1)
    ("delibaration" "deliberation" nil :count 1)
    ("demadn" "demand" nil :count 1)
    ("denstiy" "density" nil :count 1)
    ("depeer" "deeper" nil :count 1)
    ("dependecies" "dependencies" nil :count 1)
    ("deploymetn" "deployment" nil :count 1)
    ("descrives" "describes" nil :count 1)
    ("desing" "design" nil :count 4)
    ("detaisl" "details" nil :count 1)
    ("detemines" "determines" nil :count 1)
    ("diffent" "different" nil :count 1)
    ("differnet" "different" nil :count 8)
    ("diffrnt" "different" nil :count 1)
    ("dilaog" "dialog" nil :count 1)
    ("direcotry" "directory" nil :count 1)
    ("direcotyr" "directory" nil :count 1)
    ("directoyr" "directory" nil :count 6)
    ("disalbed" "disabled" nil :count 2)
    ("discusion" "discussion" nil :count 1)
    ("dissimilairity" "dissimilarity" nil :count 1)
    ("documentaiton" "documentation" nil :count 4)
    ("doens't" "doesn't" nil :count 1)
    ("donw" "done" nil :count 3)
    ("donwload" "download" nil :count 1)
    ("downlaod" "download" nil :count 2)
    ("downlaoded" "downloaded" nil :count 1)
    ("dur" "due" nil :count 3)
    ("duraiton" "duration" nil :count 1)
    ("ehat" "what" nil :count 1)
    ("eky" "key" nil :count 1)
    ("elast" "least" nil :count 1)
    ("elemnts" "elements" nil :count 1)
    ("elemtn" "element" nil :count 1)
    ("elme" "elem" nil :count 2)
    ("endpoiint" "endpoint" nil :count 1)
    ("ensrue" "ensure" nil :count 2)
    ("eoms" "some" nil :count 1)
    ("eqausl" "equals" nil :count 1)
    ("erhaps" "perhaps" nil :count 1)
    ("erorr" "error" nil :count 2)
    ("estabilhs" "establish" nil :count 2)
    ("establihsment" "establishment" nil :count 1)
    ("excceeding" "exceeding" nil :count 1)
    ("existinig" "existing" nil :count 1)
    ("exmaples" "examples" nil :count 1)
    ("experimentaiton" "experimentation" nil :count 1)
    ("expressoin" "expression" nil :count 1)
    ("extenral" "external" nil :count 2)
    ("extenrally" "externally" nil :count 1)
    ("fasle" "false" nil :count 2)
    ("feelinggs" "feelings" nil :count 1)
    ("fiarly" "fairly" nil :count 1)
    ("fiel" "file" nil :count 7)
    ("fiels" "files" nil :count 6)
    ("fien" "fine" nil :count 1)
    ("finalncial" "financial" nil :count 1)
    ("fo" "of" nil :count 137)
    ("foer" "for" nil :count 1)
    ("folliwng" "following" nil :count 3)
    ("folloiwng" "following" nil :count 2)
    ("followinig" "following" nil :count 1)
    ("followiong" "following" nil :count 1)
    ("follownig" "following" nil :count 1)
    ("follwo" "follow" nil :count 1)
    ("follwoing" "following" nil :count 3)
    ("fomrat" "format" nil :count 2)
    ("foors" "doors" nil :count 1)
    ("forseeable" "foreseeable" nil :count 1)
    ("framewokr" "framework" nil :count 1)
    ("fratment" "fragment" nil :count 1)
    ("frmo" "from" nil :count 1)
    ("fucntion" "function" nil :count 2)
    ("funciton" "function" nil :count 10)
    ("funcitons" "functions" nil :count 2)
    ("functinos" "functions" nil :count 1)
    ("globasl" "global" nil :count 1)
    ("guatds" "guards" nil :count 1)
    ("hadnler" "handler" nil :count 1)
    ("hadnling" "handling" nil :count 1)
    ("hanlde" "handle" nil :count 1)
    ("happenign" "happening" nil :count 1)
    ("hapy" "happy" nil :count 2)
    ("hcanges" "changes" nil :count 1)
    ("heuritistic" "heuristic" nil :count 1)
    ("hlep" "help" nil :count 1)
    ("hoewver" "however" nil :count 1)
    ("homogeity" "homogeneity" nil :count 1)
    ("honeslty" "honestly" nil :count 1)
    ("hsit" "shit" nil :count 1)
    ("hsould" "should" nil :count 8)
    ("htat" "that" nil :count 1)
    ("hte" "the" nil :count 14)
    ("hting" "thing" nil :count 1)
    ("htings" "things" nil :count 15)
    ("htink" "think" nil :count 3)
    ("htis" "this" nil :count 4)
    ("huntry" "hungry" nil :count 1)
    ("hwo" "who" nil :count 2)
    ("hwy" "why" nil :count 2)
    ("idendical" "identical" nil :count 1)
    ("idnetify" "identify" nil :count 1)
    ("ifnormation" "information" nil :count 1)
    ("ignorieng" "ignoring" nil :count 1)
    ("implementaiton" "implementation" nil :count 5)
    ("implementatoin" "implementation" nil :count 1)
    ("implmeented" "implemented" nil :count 1)
    ("implmenet" "implement" nil :count 3)
    ("importatn" "important" nil :count 1)
    ("improt" "import" nil :count 3)
    ("improvemyself" "improve myself" nil :count 1)
    ("informaiton" "information" nil :count 11)
    ("informaoiton" "information" nil :count 1)
    ("informatino" "information" nil :count 1)
    ("infroamtion" "information" nil :count 1)
    ("infront" "in front" nil :count 1)
    ("inifinite" "infinite" nil :count 1)
    ("initail" "initial" nil :count 1)
    ("initalized" "initialized" nil :count 1)
    ("innovatino" "innovation" nil :count 1)
    ("inot" "into" nil :count 1)
    ("insidek" "inside" nil :count 1)
    ("installatino" "installation" nil :count 1)
    ("instruciton" "instruction" nil :count 3)
    ("insufficinetly" "insufficiently" nil :count 1)
    ("integriyt" "Integrity" nil :count 1)
    ("intenral" "internal" nil :count 3)
    ("intenrally" "internally" nil :count 1)
    ("intereeset" "interest" nil :count 1)
    ("interfer" "interfere" nil :count 1)
    ("interiority" "inferiority" nil :count 1)
    ("internalizaiton" "internationalization" nil :count 1)
    ("interpretaiton" "interpretation" nil :count 1)
    ("intuitiion" "intuition" nil :count 1)
    ("investivation" "investigation" nil :count 1)
    ("irrelevatn" "irrelevant" nil :count 1)
    ("isnide" "inside" nil :count 1)
    ("isntaller" "installer" nil :count 1)
    ("isntead" "instead" nil :count 1)
    ("itc" "its" nil :count 1)
    ("itemselts" "itemsets" nil :count 2)
    ("itentity" "identity" nil :count 1)
    ("itme" "item" nil :count 1)
    ("itsems" "items" nil :count 1)
    ("itwon't" "it won't" nil :count 1)
    ("iunable" "unable" nil :count 1)
    ("iwth" "with" nil :count 9)
    ("iwthin" "within" nil :count 1)
    ("jbects" "objects" nil :count 1)
    ("jenkisn" "jenkins" nil :count 4)
    ("jsut" "just" nil :count 3)
    ("jujst" "just" nil :count 1)
    ("karhtik" "Karthik" nil :count 2)
    ("knwo" "know" nil :count 2)
    ("knwon" "known" nil :count 3)
    ("ksill" "skill" nil :count 1)
    ("ksy" "key" nil :count 1)
    ("lables" "labels" nil :count 1)
    ("laoder" "loader" nil :count 1)
    ("laxy" "lazy" nil :count 1)
    ("leggally" "legally" nil :count 1)
    ("levl" "level" nil :count 1)
    ("lical" "local" nil :count 2)
    ("liek" "like" nil :count 7)
    ("llmv" "llvm" nil :count 4)
    ("locaiton" "location" nil :count 7)
    ("localizaiton" "localization" nil :count 7)
    ("loks" "looks" nil :count 1)
    ("lsit" "list" nil :count 1)
    ("mahcine" "machine" nil :count 1)
    ("malfunciton" "malfunction" nil :count 1)
    ("maned" "named" nil :count 1)
    ("manfiest" "manifest" nil :count 1)
    ("manifrst" "manifest" nil :count 1)
    ("manipualtion" "manipulation" nil :count 1)
    ("mathc" "match" nil :count 1)
    ("mayually" "manually" nil :count 1)
    ("mdoule" "module" nil :count 1)
    ("mergw" "Merge" nil :count 2)
    ("mfoe" "more" nil :count 1)
    ("mghit" "might" nil :count 1)
    ("mgiht" "might" nil :count 10)
    ("mihgt" "might" nil :count 1)
    ("minign" "mining" nil :count 2)
    ("mjigrate" "migrate" nil :count 1)
    ("modle" "model" nil :count 2)
    ("moiton" "motion" nil :count 13)
    ("mpa" "map" nil :count 1)
    ("mroe" "more" nil :count 6)
    ("msater" "Master" nil :count 1)
    ("msot" "most" nil :count 1)
    ("muhch" "much" nil :count 1)
    ("mulitple" "multiple" nil :count 4)
    ("mvoe" "move" nil :count 2)
    ("naem" "name" nil :count 3)
    ("naimin" "Naimin" nil :count 2)
    ("namespce" "namespace" nil :count 2)
    ("ncie" "nice" nil :count 1)
    ("necessairly" "necessarily" nil :count 1)
    ("netowrk" "Network" nil :count 3)
    ("netwrok" "network" nil :count 2)
    ("nithing" "nothing" nil :count 1)
    ("nmae" "name" nil :count 1)
    ("notioin" "notion" nil :count 1)
    ("nouse" "noise'" nil :count 1)
    ("nto" "not" nil :count 1)
    ("ntoes" "notes" nil :count 1)
    ("nubmer" "number" nil :count 2)
    ("nwo" "now" nil :count 1)
    ("observd" "observed" nil :count 1)
    ("ocmponents" "components" nil :count 1)
    ("ocncrete" "concrete" nil :count 1)
    ("ocurence" "occurrence" nil :count 1)
    ("od" "of" nil :count 6)
    ("ofrm" "form" nil :count 1)
    ("oging" "going" nil :count 3)
    ("ohter" "other" nil :count 1)
    ("ohterwise" "otherwise" nil :count 1)
    ("onlihne" "online" nil :count 1)
    ("onlinie" "online" nil :count 1)
    ("operaitons" "operations" nil :count 2)
    ("opne" "open" nil :count 1)
    ("optinoal" "optional" nil :count 1)
    ("oruters" "routers" nil :count 2)
    ("osme" "some" nil :count 2)
    ("osmething" "something" nil :count 2)
    ("ot" "to" nil :count 59)
    ("otu" "out" nil :count 1)
    ("owuld" "would" nil :count 4)
    ("packats" "packets" nil :count 1)
    ("parallen" "parallel" nil :count 2)
    ("pariton" "partition" nil :count 1)
    ("partiaully" "partially" nil :count 1)
    ("pattenr" "pattern" nil :count 1)
    ("pirnt" "print" nil :count 2)
    ("platofrm" "platform" nil :count 1)
    ("poitns" "points" nil :count 1)
    ("ponit" "point" nil :count 3)
    ("porgress" "progress" nil :count 1)
    ("possbile" "possible" nil :count 1)
    ("ppython" "python" nil :count 2)
    ("prediciton" "prediction" nil :count 1)
    ("prfer" "prefer" nil :count 2)
    ("priase" "praise" nil :count 1)
    ("pripr" "prior" nil :count 1)
    ("proability" "probability" nil :count 1)
    ("probabiity" "probability" nil :count 1)
    ("probabilityes" "probabilities" nil :count 1)
    ("probabiliyt" "probability" nil :count 1)
    ("probaiblity" "probability" nil :count 1)
    ("probide" "provide" nil :count 1)
    ("probmel" "problem" nil :count 1)
    ("proeprty" "property" nil :count 1)
    ("protol" "protocol" nil :count 2)
    ("publiching" "publishing" nil :count 1)
    ("quaity" "quality" nil :count 1)
    ("queueing" "queuing" nil :count 4)
    ("raito" "Ratio" nil :count 1)
    ("rapicly" "rapidly" nil :count 1)
    ("reaosn" "reason" nil :count 1)
    ("reciept" "receipt" nil :count 2)
    ("recieve" "receive" nil :count 7)
    ("reciever" "receiver" nil :count 3)
    ("reemergence" "re-emergence" nil :count 1)
    ("refactoiring" "refactoring" nil :count 1)
    ("registraiton" "registration" nil :count 1)
    ("remians" "remains" nil :count 1)
    ("remoivng" "Removing" nil :count 2)
    ("renaem" "Rename" nil :count 6)
    ("replciate" "replicate" nil :count 1)
    ("repoisoty" "repository" nil :count 1)
    ("representaiton" "representation" nil :count 1)
    ("repsonse" "response" nil :count 1)
    ("reqally" "really" nil :count 1)
    ("requireemnts" "requirements" nil :count 1)
    ("requiremetns" "requirements" nil :count 1)
    ("requrie" "require" nil :count 1)
    ("rerason" "reason" nil :count 1)
    ("resove" "resolve" nil :count 1)
    ("responsiblity" "responsibility" nil :count 1)
    ("retreive" "retrieve" nil :count 1)
    ("reusme" "resume" nil :count 1)
    ("reutrn" "return" nil :count 8)
    ("rihgt" "right" nil :count 1)
    ("rleease" "release" nil :count 1)
    ("schedulign" "scheduling" nil :count 1)
    ("scirpt" "script" nil :count 2)
    ("scirpts" "scripts" nil :count 1)
    ("scoirng" "scoring" nil :count 1)
    ("scoppe" "scope" nil :count 1)
    ("scropt" "script" nil :count 2)
    ("seciruty" "security" nil :count 1)
    ("seciton" "section" nil :count 1)
    ("secitons" "sections" nil :count 2)
    ("securit" "security" nil :count 1)
    ("securiyt" "security" nil :count 2)
    ("segmentaiton" "Segmentation" nil :count 1)
    ("seleciton" "selection" nil :count 1)
    ("seme" "seem" nil :count 3)
    ("separeted" "separated" nil :count 1)
    ("separetly" "separately" nil :count 1)
    ("shoudl" "should" nil :count 10)
    ("shoudnt" "shouldn't" nil :count 1)
    ("showind" "showing" nil :count 1)
    ("shraed" "shared" nil :count 1)
    ("siad" "said" nil :count 1)
    ("significatn" "significant" nil :count 1)
    ("simialr" "similar" nil :count 1)
    ("singapore" "Singapore" nil :count 10)
    ("singel" "single" nil :count 2)
    ("skeletion" "skeleton" nil :count 1)
    ("slef" "self" nil :count 1)
    ("smae" "same" nil :count 1)
    ("smaple" "sample" nil :count 1)
    ("somehting" "something" nil :count 4)
    ("somethign" "something" nil :count 2)
    ("someting" "something" nil :count 2)
    ("somsthing" "something" nil :count 1)
    ("soundind" "sounding" nil :count 1)
    ("spawen" "spawn" nil :count 1)
    ("specfically" "specifically" nil :count 1)
    ("specificaiton" "specification" nil :count 1)
    ("speical" "special" nil :count 1)
    ("srue" "sure" nil :count 1)
    ("srves" "serves" nil :count 1)
    ("staitc" "static" nil :count 1)
    ("stirng" "string" nil :count 4)
    ("stirngs" "strings" nil :count 1)
    ("storeage" "storage" nil :count 1)
    ("storytelilng" "storytelling" nil :count 1)
    ("strady" "steady" nil :count 1)
    ("strign" "string" nil :count 2)
    ("submisison" "submission" nil :count 1)
    ("submoduels" "submodules" nil :count 1)
    ("suew" "sure" nil :count 1)
    ("suppoer" "support" nil :count 1)
    ("suspiciionos" "suspicions" nil :count 1)
    ("sutructure" "structure" nil :count 1)
    ("syetem" "system" nil :count 1)
    ("synchronisaton" "synchronisation" nil :count 1)
    ("systm" "system" nil :count 1)
    ("taht" "that" nil :count 58)
    ("taingint" "tainting" nil :count 1)
    ("taks" "task" nil :count 2)
    ("tat" "that" nil :count 2)
    ("tehn" "then" nil :count 1)
    ("tehre" "there" nil :count 1)
    ("tempalte" "template" nil :count 2)
    ("tempaltes" "templates" nil :count 2)
    ("temporarrily" "temporarily" nil :count 1)
    ("thaat" "that" nil :count 1)
    ("thaty" "that" nil :count 4)
    ("theri" "their" nil :count 2)
    ("thhe" "the" nil :count 1)
    ("thier" "their" nil :count 5)
    ("thigns" "things" nil :count 22)
    ("thingks" "things" nil :count 1)
    ("thorugh" "through" nil :count 6)
    ("ths" "the" nil :count 9)
    ("thwe" "the" nil :count 2)
    ("thwt" "that" nil :count 1)
    ("thwtwill" "that will" nil :count 1)
    ("ti" "it" nil :count 11)
    ("ti's" "it's" nil :count 1)
    ("tkne" "token" nil :count 1)
    ("tlaking" "talking" nil :count 1)
    ("tokne" "token" nil :count 1)
    ("tood" "todo" nil :count 1)
    ("towartds" "towards" nil :count 1)
    ("traaining" "training" nil :count 1)
    ("transaciton" "transaction" nil :count 1)
    ("transfomr" "transform" nil :count 1)
    ("transfomring" "transforming" nil :count 1)
    ("transformatinon" "transformation" nil :count 1)
    ("tremling" "trembling" nil :count 1)
    ("treu" "True" nil :count 1)
    ("tyep" "type" nil :count 1)
    ("tyepes" "types" nil :count 1)
    ("tyhe" "the" nil :count 5)
    ("tyhen" "then" nil :count 1)
    ("typign" "Typing" nil :count 1)
    ("typingn" "typing" nil :count 1)
    ("typname" "typename" nil :count 1)
    ("tyring" "trying" nil :count 1)
    ("udpate" "update" nil :count 2)
    ("udpates" "updates" nil :count 1)
    ("uisng" "using" nil :count 4)
    ("uninstallaiton" "uninstallation" nil :count 1)
    ("unknwon" "unknown" nil :count 1)
    ("unpriviledged" "unprivileged" nil :count 1)
    ("unwrpa" "unwrap" nil :count 7)
    ("uplaod" "upload" nil :count 3)
    ("uppar" "upper" nil :count 1)
    ("usign" "using" nil :count 3)
    ("ussue" "issue" nil :count 1)
    ("uwnrap" "unwrap" nil :count 2)
    ("vaidation" "validation" nil :count 1)
    ("valeu" "value" nil :count 2)
    ("validat" "validate" nil :count 1)
    ("varaibles" "variables" nil :count 1)
    ("variablae" "variables" nil :count 1)
    ("variatn" "variant" nil :count 1)
    ("varibles" "variables" nil :count 1)
    ("verison" "version" nil :count 7)
    ("versionoing" "versioning" nil :count 1)
    ("victom" "victim" nil :count 1)
    ("waht" "what" nil :count 2)
    ("warnigns" "warnings" nil :count 1)
    ("watn" "want" nil :count 3)
    ("wehre" "where" nil :count 4)
    ("whihc" "which" nil :count 4)
    ("whoel" "whole" nil :count 1)
    ("wiht" "with" nil :count 1)
    ("wnat" "want" nil :count 24)
    ("wnhat" "what" nil :count 1)
    ("woild" "would" nil :count 1)
    ("womewhere" "somewhere" nil :count 1)
    ("woudl" "would" nil :count 3)
    ("wrok" "work" nil :count 1)
    ("wrory" "worry" nil :count 1)
    ("wrpaper" "Wrapper" nil :count 1)
    ("wrt" "w.r.t" nil :count 11)
    ("wtih" "with" nil :count 7)
    ("wuld" "would" nil :count 1)
    ("wven" "even" nil :count 1)
    ("wwell" "well" nil :count 1)
    ("wya" "way" nil :count 3)
    ("yb" "by" nil :count 2)
    ("yeaterday" "yesterday" nil :count 1)
    ("yse" "yes" nil :count 1)
   ))

