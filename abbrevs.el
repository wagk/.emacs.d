;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("FIle" "File" nil :count 13)
    ("WIth" "With" nil :count 17)
    ("aand" "and" nil :count 3)
    ("abotu" "about" nil :count 3)
    ("aboyut" "about" nil :count 1)
    ("absolutley" "absolutely" nil :count 1)
    ("abstraciton" "abstraction" nil :count 1)
    ("acces" "access" nil :count 3)
    ("accoutns" "accounts" nil :count 1)
    ("accpet" "accept" nil :count 1)
    ("acocunt" "account" nil :count 3)
    ("actally" "actually" nil :count 1)
    ("activatoin" "activation" nil :count 3)
    ("actualyl" "actually" nil :count 1)
    ("acutal" "actual" nil :count 1)
    ("acutally" "actually" nil :count 2)
    ("additiaonl" "additional" nil :count 1)
    ("additinoal" "additional" nil :count 1)
    ("additioanl" "additional" nil :count 3)
    ("additioianl" "additional" nil :count 1)
    ("additon" "addition" nil :count 1)
    ("additonal" "additional" nil :count 1)
    ("additonial" "additional" nil :count 1)
    ("adminsistrator" "administrator" nil :count 1)
    ("adn" "and" nil :count 62)
    ("adversay" "adversary" nil :count 3)
    ("ahs" "has" nil :count 2)
    ("ahve" "have" nil :count 23)
    ("ahven" "haven" nil :count 1)
    ("ajva" "java" nil :count 1)
    ("algorihms" "algorithms" nil :count 2)
    ("algorihtms" "algorithms" nil :count 3)
    ("alighment" "alignment" nil :count 1)
    ("alignemnt" "alignment" nil :count 1)
    ("aline" "alone" nil :count 2)
    ("aling" "along" nil :count 1)
    ("alkready" "already" nil :count 1)
    ("allocatino" "allocation" nil :count 1)
    ("alos" "also" nil :count 1)
    ("alows" "allows" nil :count 1)
    ("alrady" "already" nil :count 1)
    ("alreayd" "already" nil :count 1)
    ("alrge" "large" nil :count 1)
    ("alwasy" "always" nil :count 3)
    ("alwyas" "always" nil :count 2)
    ("amke" "make" nil :count 1)
    ("amnager" "manager" nil :count 1)
    ("amoutn" "amount" nil :count 3)
    ("anabled" "enabled" nil :count 1)
    ("anser" "answer" nil :count 4)
    ("answser" "answer" nil :count 1)
    ("antyhing" "anything" nil :count 1)
    ("antying" "anything" nil :count 1)
    ("anywehre" "anywhere" nil :count 2)
    ("anywya" "anyway" nil :count 2)
    ("aobut" "about" nil :count 19)
    ("apaprently" "apparently" nil :count 1)
    ("apears" "appears" nil :count 1)
    ("apend" "append" nil :count 1)
    ("apparnetly" "apparently" nil :count 4)
    ("appication" "application" nil :count 1)
    ("applicaiton" "application" nil :count 4)
    ("applicaitons" "applications" nil :count 1)
    ("applicatioins" "applications" nil :count 1)
    ("applicatoins" "applications" nil :count 1)
    ("applicaton" "application" nil :count 4)
    ("appropraite" "appropriate" nil :count 2)
    ("approproately" "appropriately" nil :count 1)
    ("approrpiate" "appropriate" nil :count 1)
    ("aprse" "parse" nil :count 1)
    ("aprt" "part" nil :count 1)
    ("apsted" "pasted" nil :count 1)
    ("apth" "path" nil :count 1)
    ("aready" "already" nil :count 1)
    ("argumetn" "argument" nil :count 1)
    ("arleady" "already" nil :count 1)
    ("aroudn" "around" nil :count 3)
    ("arrial" "arrival" nil :count 1)
    ("artifactoyr" "artifactory" nil :count 1)
    ("artifcts" "artifacts" nil :count 1)
    ("artificailly" "artificially" nil :count 1)
    ("arugment" "argument" nil :count 1)
    ("aslo" "also" nil :count 1)
    ("assingment" "assignment" nil :count 1)
    ("assocaited" "associated" nil :count 1)
    ("associaed" "associated" nil :count 1)
    ("assumpiton" "assumption" nil :count 1)
    ("asusme" "assume" nil :count 1)
    ("asusmptino" "assumption" nil :count 1)
    ("asynchtonous" "Asynchronous" nil :count 1)
    ("attakcs" "attacks" nil :count 1)
    ("attempgint" "attempting" nil :count 1)
    ("attepnt" "attempt" nil :count 1)
    ("attmept" "attempt" nil :count 2)
    ("attmepting" "attempting" nil :count 3)
    ("attmepts" "attempts" nil :count 5)
    ("atuomatically" "automatically" nil :count 2)
    ("augmentaiton" "augmentation" nil :count 1)
    ("australia" "Australia" nil :count 3)
    ("authenticaiton" "authentication" nil :count 1)
    ("autolaoding" "autoloading" nil :count 1)
    ("avaialble" "available" nil :count 2)
    ("availabel" "available" nil :count 1)
    ("availabiliyt" "availability" nil :count 1)
    ("awiat" "await" nil :count 5)
    ("balanded" "balanced" nil :count 1)
    ("baloon" "balloon" nil :count 1)
    ("baout" "about" nil :count 1)
    ("batrch" "batch" nil :count 1)
    ("becaseu" "because" nil :count 1)
    ("becasue" "because" nil :count 44)
    ("becuase" "because" nil :count 4)
    ("beelong" "belong" nil :count 1)
    ("behasvior" "behavior" nil :count 1)
    ("behaviro" "behavior" nil :count 1)
    ("beleive" "believe" nil :count 1)
    ("belinging" "belonging" nil :count 1)
    ("beter" "better" nil :count 2)
    ("betwene" "between" nil :count 1)
    ("bidnings" "bindings" nil :count 1)
    ("bigfixes" "bugfixes" nil :count 1)
    ("binaties" "binaries" nil :count 1)
    ("binayr" "binary" nil :count 1)
    ("bindigns" "bindings" nil :count 2)
    ("binidngs" "bindings" nil :count 1)
    ("blansidhments" "blandishments" nil :count 1)
    ("blidning" "blinding" nil :count 1)
    ("blodk" "block" nil :count 1)
    ("boht" "both" nil :count 2)
    ("bootsrtap" "bootstrap" nil :count 1)
    ("bototm" "bottom" nil :count 1)
    ("boyd" "body" nil :count 5)
    ("breahc" "breach" nil :count 1)
    ("brnach" "branch" nil :count 8)
    ("brreaking" "breaking" nil :count 1)
    ("btu" "but" nil :count 2)
    ("buidling" "building" nil :count 2)
    ("buildsript" "buildscript" nil :count 1)
    ("builidng" "building" nil :count 5)
    ("buisness" "business" nil :count 1)
    ("buuild" "build" nil :count 1)
    ("byt" "by" nil :count 27)
    ("byut" "but" nil :count 3)
    ("cahce" "cache" nil :count 4)
    ("cahnge" "change" nil :count 3)
    ("callbakc" "callback" nil :count 1)
    ("calng" "clang" nil :count 3)
    ("candiate" "candidate" nil :count 1)
    ("captrue" "capture" nil :count 1)
    ("cashe" "cache" nil :count 1)
    ("casue" "cause" nil :count 2)
    ("cauisng" "causing" nil :count 3)
    ("chaanges" "changes" nil :count 1)
    ("chagne" "change" nil :count 1)
    ("chagnes" "changes" nil :count 1)
    ("chanes" "changes" nil :count 1)
    ("charactrer" "character" nil :count 1)
    ("checkinf" "checking" nil :count 2)
    ("checkng" "checking" nil :count 1)
    ("chekc" "check" nil :count 10)
    ("chnages" "changes" nil :count 2)
    ("chooose" "choose" nil :count 1)
    ("clarificatoin" "clarification" nil :count 1)
    ("classificaiton" "classification" nil :count 2)
    ("classifictions" "classifications" nil :count 1)
    ("cleint" "client" nil :count 3)
    ("cliam" "claim" nil :count 1)
    ("clinet" "client" nil :count 66)
    ("clinets" "clients" nil :count 1)
    ("clnag" "clang" nil :count 1)
    ("cloen" "clone" nil :count 2)
    ("cloine" "clone" nil :count 24)
    ("closeing" "closing" nil :count 1)
    ("closign" "closing" nil :count 1)
    ("cna" "can" nil :count 21)
    ("cnofig" "config" nil :count 1)
    ("cofig" "config" nil :count 1)
    ("cofngi" "config" nil :count 3)
    ("cofnig" "config" nil :count 47)
    ("colaltes" "collates" nil :count 1)
    ("columsn" "columns" nil :count 1)
    ("comamdn" "command" nil :count 1)
    ("comamnd" "command" nil :count 3)
    ("comamnds" "commands" nil :count 1)
    ("commadn" "command" nil :count 7)
    ("commadns" "commands" nil :count 2)
    ("commetn" "comment" nil :count 2)
    ("commnads" "commands" nil :count 2)
    ("commot" "commit" nil :count 1)
    ("commti" "commit" nil :count 1)
    ("communicaiton" "communication" nil :count 1)
    ("compariosns" "comparisons" nil :count 1)
    ("compatibiliyt" "compatibility" nil :count 2)
    ("compilaition" "compilation" nil :count 2)
    ("compilaiton" "compilation" nil :count 3)
    ("complianing" "complaining" nil :count 2)
    ("complidcated" "complicated" nil :count 1)
    ("compoennts" "components" nil :count 1)
    ("componetn" "component" nil :count 1)
    ("conatin" "contain" nil :count 2)
    ("conditiions" "conditions" nil :count 1)
    ("conditioanl" "conditional" nil :count 2)
    ("conditioins" "conditions" nil :count 1)
    ("configuraiton" "configuration" nil :count 7)
    ("configuratoin" "configuration" nil :count 1)
    ("confition" "condition" nil :count 1)
    ("confusino" "confusion" nil :count 1)
    ("confusinog" "confusion" nil :count 1)
    ("conneciton" "connection" nil :count 1)
    ("connectinos" "connections" nil :count 1)
    ("consdier" "consider" nil :count 1)
    ("consitent" "consistent" nil :count 1)
    ("constrol" "control" nil :count 1)
    ("construtor" "constructor" nil :count 1)
    ("contain" "contain" nil :count 98)
    ("contian" "contain" nil :count 3)
    ("contians" "contains" nil :count 1)
    ("contiguiosu" "contiguous" nil :count 1)
    ("contitutes" "constitutes" nil :count 1)
    ("contnets" "contents" nil :count 1)
    ("contradiciton" "contradiction" nil :count 1)
    ("contrils" "controls" nil :count 1)
    ("conundeum" "conundrum" nil :count 1)
    ("conveneint" "convenient" nil :count 1)
    ("convenicne" "convenience" nil :count 1)
    ("conveninece" "convenience" nil :count 1)
    ("coonstruct" "construct" nil :count 1)
    ("copty" "copy" nil :count 1)
    ("correclty" "correctly" nil :count 3)
    ("correspoind" "correspond" nil :count 1)
    ("corresponsing" "corresponding" nil :count 1)
    ("corrwect" "correct" nil :count 1)
    ("cosnt" "const" nil :count 10)
    ("couse" "course" nil :count 1)
    ("coyping" "copying" nil :count 1)
    ("cpature" "capture" nil :count 1)
    ("cpecify" "specify" nil :count 1)
    ("craeting" "creating" nil :count 1)
    ("crashign" "crashing" nil :count 1)
    ("creaet" "create" nil :count 2)
    ("createion" "creation" nil :count 1)
    ("creatinon" "creation" nil :count 1)
    ("credentails" "credentials" nil :count 1)
    ("credentiasl" "credentials" nil :count 12)
    ("currenly" "currently" nil :count 1)
    ("currnet" "current" nil :count 22)
    ("currnetly" "currently" nil :count 9)
    ("cusotm" "custom" nil :count 1)
    ("customizatino" "customization" nil :count 1)
    ("cutlreu" "culture" nil :count 1)
    ("cutlture" "culture" nil :count 1)
    ("danglign" "dangling" nil :count 1)
    ("debgu" "debug" nil :count 1)
    ("decisoin" "decision" nil :count 1)
    ("decison" "decision" nil :count 1)
    ("declararion" "declaration" nil :count 1)
    ("decompoised" "decomposed" nil :count 1)
    ("deductino" "deduction" nil :count 1)
    ("deduplciation" "deduplication" nil :count 1)
    ("definiltey" "definitely" nil :count 1)
    ("definitiion" "definition" nil :count 1)
    ("definitley" "definitely" nil :count 1)
    ("defualt" "default" nil :count 3)
    ("deletino" "deletion" nil :count 1)
    ("delibaration" "deliberation" nil :count 1)
    ("demadn" "demand" nil :count 3)
    ("denstiy" "density" nil :count 1)
    ("depeer" "deeper" nil :count 1)
    ("dependecies" "dependencies" nil :count 1)
    ("deploymetn" "deployment" nil :count 1)
    ("descriptino" "description" nil :count 1)
    ("descrives" "describes" nil :count 1)
    ("desing" "design" nil :count 11)
    ("destionation" "destination" nil :count 1)
    ("destorying" "destroying" nil :count 1)
    ("detaisl" "details" nil :count 3)
    ("detemines" "determines" nil :count 1)
    ("detemrine" "determine" nil :count 1)
    ("diffent" "different" nil :count 1)
    ("differnet" "different" nil :count 9)
    ("differnetly" "differently" nil :count 1)
    ("diffrnt" "different" nil :count 1)
    ("dilaog" "dialog" nil :count 1)
    ("dilatino" "dilation" nil :count 1)
    ("direciton" "direction" nil :count 1)
    ("direclty" "directly" nil :count 1)
    ("direcotry" "directory" nil :count 1)
    ("direcotyr" "directory" nil :count 1)
    ("directoyr" "directory" nil :count 15)
    ("dirtu" "dirty" nil :count 1)
    ("disalbe" "disable" nil :count 1)
    ("disalbed" "disabled" nil :count 2)
    ("discusion" "discussion" nil :count 2)
    ("dispalcement" "displacement" nil :count 1)
    ("dissimilairity" "dissimilarity" nil :count 1)
    ("docuemtn" "document" nil :count 1)
    ("documentaiton" "documentation" nil :count 7)
    ("documentatoin" "documentation" nil :count 2)
    ("documetn" "document" nil :count 1)
    ("doens't" "doesn't" nil :count 1)
    ("doign" "doing" nil :count 1)
    ("dont'" "don't" nil :count 1)
    ("donw" "done" nil :count 7)
    ("donwlaod" "download" nil :count 1)
    ("donwload" "download" nil :count 1)
    ("doucment" "document" nil :count 11)
    ("downlaod" "download" nil :count 4)
    ("downlaoded" "downloaded" nil :count 1)
    ("duirng" "during" nil :count 1)
    ("dur" "due" nil :count 4)
    ("duraiton" "duration" nil :count 1)
    ("dynamicallly" "dynamically" nil :count 1)
    ("efficinet" "efficient" nil :count 2)
    ("efficintly" "efficiently" nil :count 1)
    ("ehat" "what" nil :count 1)
    ("ehwihc" "which" nil :count 1)
    ("eith" "with" nil :count 2)
    ("eky" "key" nil :count 2)
    ("elast" "least" nil :count 2)
    ("elemnts" "elements" nil :count 1)
    ("elemtn" "element" nil :count 2)
    ("elme" "elem" nil :count 2)
    ("emtpy" "empty" nil :count 1)
    ("encable" "enable" nil :count 1)
    ("endpoiint" "endpoint" nil :count 1)
    ("endpoitn" "endpoint" nil :count 1)
    ("endponit" "endpoint" nil :count 2)
    ("endponits" "endpoints" nil :count 1)
    ("ened" "need" nil :count 1)
    ("engouh" "enough" nil :count 2)
    ("enoguh" "enough" nil :count 5)
    ("enpdoint" "endpoint" nil :count 1)
    ("ensrue" "ensure" nil :count 2)
    ("entereis" "entries" nil :count 1)
    ("entier" "entire" nil :count 1)
    ("entirley" "entirely" nil :count 1)
    ("entirsly" "entirely" nil :count 1)
    ("entreis" "entries" nil :count 1)
    ("enviornment" "environment" nil :count 1)
    ("enviornments" "environments" nil :count 1)
    ("envirnoment" "environment" nil :count 1)
    ("environmnet" "environment" nil :count 1)
    ("eoms" "some" nil :count 1)
    ("epohc" "epoch" nil :count 6)
    ("eqausl" "equals" nil :count 1)
    ("erad" "read" nil :count 1)
    ("erhaps" "perhaps" nil :count 1)
    ("erorr" "error" nil :count 10)
    ("errir" "error" nil :count 1)
    ("ersult" "result" nil :count 2)
    ("escapre" "escape" nil :count 1)
    ("esier" "easier" nil :count 1)
    ("espeically" "especially" nil :count 2)
    ("estabilhs" "establish" nil :count 2)
    ("establihs" "establish" nil :count 1)
    ("establihsment" "establishment" nil :count 1)
    ("etih" "with" nil :count 1)
    ("everythihng" "everything" nil :count 1)
    ("eveyr" "every" nil :count 1)
    ("eveyrone" "everyone" nil :count 1)
    ("evlauate" "evaluate" nil :count 1)
    ("evne" "even" nil :count 2)
    ("evnet" "event" nil :count 6)
    ("evnetually" "eventually" nil :count 1)
    ("exactyly" "exactly" nil :count 1)
    ("exampels" "examples" nil :count 1)
    ("excceeding" "exceeding" nil :count 1)
    ("exisitng" "existing" nil :count 3)
    ("existinig" "existing" nil :count 1)
    ("exmaple" "example" nil :count 2)
    ("exmaples" "examples" nil :count 1)
    ("exmple" "example" nil :count 1)
    ("expalnation" "explanation" nil :count 1)
    ("expect_taht" "EXPECT_THAT" nil :count 1)
    ("expectaitons" "expectations" nil :count 1)
    ("experiement" "experiment" nil :count 1)
    ("experimentaiton" "experimentation" nil :count 1)
    ("expetions" "expectations" nil :count 1)
    ("explian" "explain" nil :count 1)
    ("explianed" "explained" nil :count 1)
    ("explictly" "explicitly" nil :count 1)
    ("expressoin" "expression" nil :count 2)
    ("expressoins" "expressions" nil :count 1)
    ("extenral" "external" nil :count 2)
    ("extenrally" "externally" nil :count 1)
    ("extned" "extend" nil :count 1)
    ("faield" "failed" nil :count 1)
    ("falgs" "flags" nil :count 1)
    ("fallbck" "fallback" nil :count 1)
    ("fasle" "false" nil :count 5)
    ("feelinggs" "feelings" nil :count 1)
    ("feild" "field" nil :count 1)
    ("fiarly" "fairly" nil :count 1)
    ("fiddlign" "fiddling" nil :count 1)
    ("fiel" "file" nil :count 11)
    ("fiels" "files" nil :count 8)
    ("fien" "fine" nil :count 3)
    ("fiew" "view" nil :count 1)
    ("figorue" "figure" nil :count 1)
    ("filw" "file" nil :count 1)
    ("finalncial" "financial" nil :count 1)
    ("fitst" "first" nil :count 1)
    ("flihgt" "flight" nil :count 2)
    ("fo" "of" nil :count 271)
    ("foer" "for" nil :count 1)
    ("fogure" "figure" nil :count 1)
    ("folliwng" "following" nil :count 5)
    ("folloiwng" "following" nil :count 12)
    ("followign" "following" nil :count 1)
    ("followinig" "following" nil :count 1)
    ("followiong" "following" nil :count 2)
    ("follownig" "following" nil :count 1)
    ("followoing" "following" nil :count 1)
    ("follwo" "follow" nil :count 1)
    ("follwoing" "following" nil :count 3)
    ("fomrat" "format" nil :count 4)
    ("foors" "doors" nil :count 1)
    ("foramtion" "formation" nil :count 1)
    ("formatyion" "formation" nil :count 1)
    ("forseeable" "foreseeable" nil :count 1)
    ("frameowrk" "framework" nil :count 2)
    ("framewokr" "framework" nil :count 1)
    ("fratment" "fragment" nil :count 1)
    ("frmo" "from" nil :count 1)
    ("fro" "for" nil :count 5)
    ("frtom" "from" nil :count 1)
    ("fucntion" "function" nil :count 2)
    ("funciton" "function" nil :count 16)
    ("funcitons" "functions" nil :count 3)
    ("functino" "function" nil :count 6)
    ("functinoality" "functionality" nil :count 1)
    ("functinos" "functions" nil :count 2)
    ("functionaliyt" "functionality" nil :count 1)
    ("functiuon" "function" nil :count 1)
    ("furst" "first" nil :count 1)
    ("futre" "future" nil :count 2)
    ("geneate" "generate" nil :count 1)
    ("genreal" "general" nil :count 1)
    ("genreated" "generated" nil :count 1)
    ("geos" "goes" nil :count 1)
    ("glboal" "global" nil :count 1)
    ("globasl" "global" nil :count 1)
    ("goign" "going" nil :count 1)
    ("gonig" "going" nil :count 3)
    ("guatds" "guards" nil :count 1)
    ("hackeyr" "hackery" nil :count 1)
    ("hadnle" "handle" nil :count 7)
    ("hadnler" "handler" nil :count 1)
    ("hadnling" "handling" nil :count 1)
    ("handlign" "handling" nil :count 1)
    ("handshaek" "handshake" nil :count 1)
    ("hanlde" "handle" nil :count 3)
    ("hanlder" "handler" nil :count 4)
    ("happed" "happened" nil :count 2)
    ("happenign" "happening" nil :count 1)
    ("hapy" "happy" nil :count 2)
    ("havig" "having" nil :count 1)
    ("hcanges" "changes" nil :count 1)
    ("hdies" "hides" nil :count 1)
    ("helath" "health" nil :count 3)
    ("hermeitc" "hermetic" nil :count 1)
    ("hesitatn" "hesitant" nil :count 1)
    ("heuritistic" "heuristic" nil :count 1)
    ("hgih" "high" nil :count 1)
    ("hirign" "hiring" nil :count 1)
    ("histoyr" "history" nil :count 1)
    ("histroy" "history" nil :count 1)
    ("hlep" "help" nil :count 9)
    ("hoewver" "however" nil :count 1)
    ("homogeity" "homogeneity" nil :count 1)
    ("honelsty" "honestly" nil :count 1)
    ("honeslty" "honestly" nil :count 2)
    ("hookign" "hooking" nil :count 1)
    ("hpapy" "happy" nil :count 1)
    ("hriign" "hiring" nil :count 1)
    ("hsit" "shit" nil :count 1)
    ("hsould" "should" nil :count 18)
    ("htat" "that" nil :count 2)
    ("hte" "the" nil :count 39)
    ("htem" "them" nil :count 1)
    ("hten" "then" nil :count 1)
    ("hting" "thing" nil :count 3)
    ("htings" "things" nil :count 15)
    ("htink" "think" nil :count 10)
    ("htis" "this" nil :count 19)
    ("huntry" "hungry" nil :count 1)
    ("hwat" "what" nil :count 1)
    ("hwen" "when" nil :count 2)
    ("hwich" "which" nil :count 1)
    ("hwihc" "which" nil :count 2)
    ("hwo" "who" nil :count 8)
    ("hwy" "why" nil :count 3)
    ("ibn" "in" nil :count 1)
    ("idendical" "identical" nil :count 1)
    ("identital" "identical" nil :count 1)
    ("idnetify" "identify" nil :count 1)
    ("ifnormation" "information" nil :count 1)
    ("ignorieng" "ignoring" nil :count 1)
    ("ignroe" "ignore" nil :count 1)
    ("impelmenentations" "implementations" nil :count 1)
    ("implament" "implement" nil :count 1)
    ("impleemnt" "implement" nil :count 1)
    ("implemeitng" "implementing" nil :count 1)
    ("implementaiton" "implementation" nil :count 15)
    ("implementaitons" "implementations" nil :count 1)
    ("implementatoin" "implementation" nil :count 2)
    ("implementatyion" "implementation" nil :count 1)
    ("implemnetation" "implementation" nil :count 1)
    ("implemneted" "implemented" nil :count 1)
    ("implmeented" "implemented" nil :count 1)
    ("implmenet" "implement" nil :count 3)
    ("implmeneted" "implemented" nil :count 1)
    ("implmentation" "implementation" nil :count 3)
    ("importatn" "important" nil :count 1)
    ("importnat" "important" nil :count 1)
    ("improt" "import" nil :count 3)
    ("improvemyself" "improve myself" nil :count 1)
    ("inconsistnet" "inconsistent" nil :count 1)
    ("incremenetally" "incrementally" nil :count 1)
    ("indentaiton" "indentation" nil :count 1)
    ("inehrit" "inherit" nil :count 1)
    ("informaitno" "information" nil :count 5)
    ("informaiton" "information" nil :count 16)
    ("informaoiton" "information" nil :count 1)
    ("informatino" "information" nil :count 17)
    ("infroamtion" "information" nil :count 1)
    ("infront" "in front" nil :count 1)
    ("ingnore" "ignore" nil :count 1)
    ("ingoring" "ignoring" nil :count 1)
    ("inheirt" "inherit" nil :count 1)
    ("inheritahce" "inheritance" nil :count 1)
    ("inifinite" "infinite" nil :count 1)
    ("initail" "initial" nil :count 2)
    ("initalized" "initialized" nil :count 1)
    ("innovatino" "innovation" nil :count 1)
    ("inot" "into" nil :count 10)
    ("insdie" "inside" nil :count 5)
    ("insecrue" "insecure" nil :count 1)
    ("insidek" "inside" nil :count 1)
    ("instaed" "instead" nil :count 1)
    ("installatino" "installation" nil :count 2)
    ("installtino" "installation" nil :count 1)
    ("insted" "instead" nil :count 2)
    ("instnace" "instance" nil :count 1)
    ("instruciton" "instruction" nil :count 3)
    ("instructuions" "instructions" nil :count 1)
    ("insufficinetly" "insufficiently" nil :count 2)
    ("integriyt" "Integrity" nil :count 1)
    ("intenral" "internal" nil :count 8)
    ("intenrally" "internally" nil :count 1)
    ("intenrals" "internals" nil :count 1)
    ("interacitve" "interactive" nil :count 1)
    ("intereeset" "interest" nil :count 1)
    ("interfer" "interfere" nil :count 1)
    ("interiority" "inferiority" nil :count 1)
    ("interivew" "interview" nil :count 1)
    ("internalizaiton" "internationalization" nil :count 1)
    ("internasl" "internals" nil :count 1)
    ("interpretaiton" "interpretation" nil :count 1)
    ("interveiw" "interview" nil :count 1)
    ("inti" "init" nil :count 8)
    ("intuitiion" "intuition" nil :count 1)
    ("invarinat" "invariant" nil :count 1)
    ("investivation" "investigation" nil :count 1)
    ("invlaid" "invalid" nil :count 1)
    ("irrelevatn" "irrelevant" nil :count 1)
    ("isnce" "since" nil :count 2)
    ("isnide" "inside" nil :count 1)
    ("isntaller" "installer" nil :count 1)
    ("isntead" "instead" nil :count 2)
    ("isolaiton" "isolation" nil :count 1)
    ("isusues" "issues" nil :count 1)
    ("itc" "its" nil :count 1)
    ("itemselts" "itemsets" nil :count 2)
    ("itentity" "identity" nil :count 1)
    ("itme" "item" nil :count 1)
    ("itneractive" "interactive" nil :count 1)
    ("itnerface" "interface" nil :count 1)
    ("itsems" "items" nil :count 1)
    ("itslef" "itself" nil :count 2)
    ("itwon't" "it won't" nil :count 1)
    ("iunable" "unable" nil :count 1)
    ("iupdate" "update" nil :count 1)
    ("iwht" "with" nil :count 7)
    ("iwll" "will" nil :count 7)
    ("iwth" "with" nil :count 29)
    ("iwthin" "within" nil :count 2)
    ("jbects" "objects" nil :count 1)
    ("jenkisn" "jenkins" nil :count 4)
    ("josn" "json" nil :count 2)
    ("jsut" "just" nil :count 7)
    ("jujst" "just" nil :count 1)
    ("justificatoin" "justification" nil :count 1)
    ("karhtik" "Karthik" nil :count 2)
    ("kingodm" "kingdom" nil :count 1)
    ("knonw" "known" nil :count 2)
    ("knwo" "know" nil :count 9)
    ("knwon" "known" nil :count 3)
    ("ksill" "skill" nil :count 1)
    ("ksy" "key" nil :count 1)
    ("lables" "labels" nil :count 1)
    ("laod" "load" nil :count 1)
    ("laoder" "loader" nil :count 1)
    ("laoding" "loading" nil :count 1)
    ("larget" "larger" nil :count 1)
    ("laxy" "lazy" nil :count 1)
    ("lcoal" "local" nil :count 2)
    ("leggally" "legally" nil :count 1)
    ("levl" "level" nil :count 1)
    ("lical" "local" nil :count 2)
    ("liek" "like" nil :count 15)
    ("lifw" "life" nil :count 1)
    ("lihgt" "light" nil :count 1)
    ("likley" "likely" nil :count 1)
    ("listenign" "listening" nil :count 1)
    ("literla" "literal" nil :count 1)
    ("llmv" "llvm" nil :count 4)
    ("lnad" "land" nil :count 1)
    ("lnegth" "length" nil :count 1)
    ("locaiton" "location" nil :count 9)
    ("localizaiton" "localization" nil :count 7)
    ("loks" "looks" nil :count 1)
    ("lsit" "list" nil :count 2)
    ("magnitide" "magnitude" nil :count 1)
    ("mahcine" "machine" nil :count 1)
    ("maintainance" "maintenance" nil :count 1)
    ("maintenacne" "maintenance" nil :count 1)
    ("make_typle" "make_tuple" nil :count 1)
    ("makrdown" "markdown" nil :count 2)
    ("makrdwon" "markdown" nil :count 1)
    ("malfunciton" "malfunction" nil :count 1)
    ("maned" "named" nil :count 1)
    ("manfiest" "manifest" nil :count 1)
    ("manifrst" "manifest" nil :count 1)
    ("manipualtion" "manipulation" nil :count 1)
    ("manyu" "many" nil :count 1)
    ("markdonw" "markdown" nil :count 3)
    ("markdwon" "markdown" nil :count 54)
    ("mathc" "match" nil :count 3)
    ("mayually" "manually" nil :count 1)
    ("mdoe" "mode" nil :count 3)
    ("mdouel" "module" nil :count 1)
    ("mdoule" "module" nil :count 1)
    ("measn" "means" nil :count 2)
    ("mecahnism" "mechanism" nil :count 1)
    ("mehtod" "method" nil :count 1)
    ("memeory" "memory" nil :count 1)
    ("memmory" "memory" nil :count 1)
    ("memroy" "memory" nil :count 11)
    ("menas" "means" nil :count 1)
    ("mentioed" "mentioned" nil :count 2)
    ("mergw" "Merge" nil :count 2)
    ("mertge" "Merge" nil :count 1)
    ("mfoe" "more" nil :count 1)
    ("mghit" "might" nil :count 1)
    ("mgiht" "might" nil :count 29)
    ("mihgt" "might" nil :count 4)
    ("minign" "mining" nil :count 2)
    ("mjigrate" "migrate" nil :count 1)
    ("mkae" "make" nil :count 2)
    ("modificaiton" "modification" nil :count 1)
    ("modle" "model" nil :count 3)
    ("moemnt" "moment" nil :count 1)
    ("moemtn" "moment" nil :count 1)
    ("moiton" "motion" nil :count 13)
    ("mpa" "map" nil :count 3)
    ("mroe" "more" nil :count 20)
    ("msater" "Master" nil :count 1)
    ("msot" "most" nil :count 1)
    ("muhch" "much" nil :count 1)
    ("mulitple" "multiple" nil :count 6)
    ("mutaitng" "mutating" nil :count 0)
    ("mutble" "mutable" nil :count 1)
    ("mvoe" "move" nil :count 11)
    ("nad" "and" nil :count 3)
    ("naem" "name" nil :count 10)
    ("naimin" "Naimin" nil :count 2)
    ("namespce" "namespace" nil :count 2)
    ("nautre" "nature" nil :count 1)
    ("ncie" "nice" nil :count 1)
    ("necessairly" "necessarily" nil :count 2)
    ("necessayr" "necessary" nil :count 1)
    ("netowrk" "Network" nil :count 11)
    ("netwrok" "network" nil :count 2)
    ("nithing" "nothing" nil :count 1)
    ("nmae" "name" nil :count 2)
    ("nothign" "nothing" nil :count 1)
    ("nothinng" "nothing" nil :count 1)
    ("notioin" "notion" nil :count 1)
    ("nouse" "noise'" nil :count 1)
    ("nromal" "normal" nil :count 0)
    ("nromals" "normals" nil :count 1)
    ("nto" "not" nil :count 33)
    ("ntoe" "note" nil :count 1)
    ("ntoes" "notes" nil :count 1)
    ("nubmer" "number" nil :count 2)
    ("nwo" "now" nil :count 3)
    ("observd" "observed" nil :count 1)
    ("ocmmit" "commit" nil :count 1)
    ("ocmponents" "components" nil :count 1)
    ("ocncrete" "concrete" nil :count 1)
    ("ocnfiguration" "configuration" nil :count 1)
    ("ocunt" "count" nil :count 1)
    ("ocurence" "occurrence" nil :count 1)
    ("oding" "doing" nil :count 2)
    ("odne" "done" nil :count 2)
    ("ofrm" "form" nil :count 1)
    ("oging" "going" nil :count 4)
    ("ohter" "other" nil :count 8)
    ("ohterwise" "otherwise" nil :count 1)
    ("omre" "more" nil :count 1)
    ("onlihne" "online" nil :count 1)
    ("onlinie" "online" nil :count 1)
    ("onr" "one" nil :count 1)
    ("ont" "not" nil :count 2)
    ("onw" "own" nil :count 1)
    ("opaeuq" "opaque" nil :count 1)
    ("operaitons" "operations" nil :count 2)
    ("opiton" "option" nil :count 4)
    ("opne" "open" nil :count 2)
    ("opportunies" "opportunities" nil :count 1)
    ("optino" "Option" nil :count 14)
    ("optinoal" "optional" nil :count 3)
    ("origianl" "original" nil :count 2)
    ("oruters" "routers" nil :count 2)
    ("osme" "some" nil :count 3)
    ("osmething" "something" nil :count 4)
    ("ot" "to" nil :count 139)
    ("otu" "out" nil :count 16)
    ("ovelrine" "overline" nil :count 1)
    ("overriden" "overridden" nil :count 1)
    ("overship" "ownership" nil :count 1)
    ("owuld" "would" nil :count 11)
    ("paattern" "pattern" nil :count 1)
    ("packats" "packets" nil :count 1)
    ("parallen" "parallel" nil :count 2)
    ("paramter" "parameter" nil :count 1)
    ("paramters" "parameters" nil :count 2)
    ("paremater" "parameter" nil :count 1)
    ("pariton" "partition" nil :count 1)
    ("partiaully" "partially" nil :count 1)
    ("pattenr" "pattern" nil :count 1)
    ("paylaod" "payload" nil :count 4)
    ("performacne" "performance" nil :count 1)
    ("persoanl" "personal" nil :count 1)
    ("persoanlly" "personally" nil :count 1)
    ("pickign" "picking" nil :count 1)
    ("pirnt" "print" nil :count 2)
    ("platofrm" "platform" nil :count 1)
    ("playgorund" "playground" nil :count 1)
    ("pnagt" "pangt" nil :count 1)
    ("poitns" "points" nil :count 2)
    ("ponit" "point" nil :count 8)
    ("popualte" "populate" nil :count 1)
    ("porgress" "progress" nil :count 1)
    ("possbile" "possible" nil :count 2)
    ("possibilitiy" "possibility" nil :count 1)
    ("postign" "posting" nil :count 1)
    ("ppython" "python" nil :count 2)
    ("pradictor" "predictor" nil :count 1)
    ("prediciton" "prediction" nil :count 1)
    ("presisng" "pressing" nil :count 1)
    ("prfer" "prefer" nil :count 2)
    ("priase" "praise" nil :count 1)
    ("pripr" "prior" nil :count 1)
    ("proability" "probability" nil :count 1)
    ("probabiity" "probability" nil :count 1)
    ("probabilityes" "probabilities" nil :count 1)
    ("probabiliyt" "probability" nil :count 1)
    ("probaiblity" "probability" nil :count 1)
    ("probalby" "probably" nil :count 6)
    ("probaly" "probably" nil :count 1)
    ("probelm" "problem" nil :count 2)
    ("probide" "provide" nil :count 1)
    ("probmel" "problem" nil :count 1)
    ("processign" "processing" nil :count 1)
    ("produciton" "production" nil :count 2)
    ("proeprty" "property" nil :count 1)
    ("profesisonal" "professional" nil :count 1)
    ("profide" "provide" nil :count 1)
    ("promotino" "promotion" nil :count 1)
    ("promptinig" "prompting" nil :count 1)
    ("propsoes" "proposes" nil :count 1)
    ("protol" "protocol" nil :count 2)
    ("ptu" "put" nil :count 1)
    ("publiching" "publishing" nil :count 1)
    ("pyaload" "payload" nil :count 1)
    ("quaity" "quality" nil :count 1)
    ("qualificaiton" "qualification" nil :count 1)
    ("queueing" "queuing" nil :count 4)
    ("raito" "Ratio" nil :count 1)
    ("raom" "roam" nil :count 7)
    ("rapicly" "rapidly" nil :count 1)
    ("realted" "related" nil :count 1)
    ("reaosn" "reason" nil :count 3)
    ("recetn" "recent" nil :count 1)
    ("reciept" "receipt" nil :count 2)
    ("recieve" "receive" nil :count 8)
    ("reciever" "receiver" nil :count 3)
    ("recoveyr" "recovery" nil :count 1)
    ("reemergence" "re-emergence" nil :count 1)
    ("refactoiring" "refactoring" nil :count 1)
    ("refelct" "reflect" nil :count 1)
    ("regaridng" "regarding" nil :count 1)
    ("registraiton" "registration" nil :count 1)
    ("relaitonship" "relationship" nil :count 1)
    ("remian" "remain" nil :count 1)
    ("remians" "remains" nil :count 1)
    ("remoivng" "Removing" nil :count 2)
    ("remvoe" "remove" nil :count 3)
    ("renaem" "Rename" nil :count 29)
    ("replciate" "replicate" nil :count 2)
    ("replciated" "replicated" nil :count 1)
    ("repoisoty" "repository" nil :count 1)
    ("repositiory" "repository" nil :count 1)
    ("representaiton" "representation" nil :count 1)
    ("repsnose" "response" nil :count 1)
    ("repsonse" "response" nil :count 2)
    ("reqally" "really" nil :count 1)
    ("reqeust" "request" nil :count 1)
    ("requiers" "requires" nil :count 2)
    ("requireemnts" "requirements" nil :count 1)
    ("requiremetns" "requirements" nil :count 1)
    ("requrie" "require" nil :count 10)
    ("requried" "required" nil :count 2)
    ("requriement" "requirement" nil :count 1)
    ("requriements" "requirements" nil :count 1)
    ("rerason" "reason" nil :count 1)
    ("resaosn" "reason" nil :count 1)
    ("resove" "resolve" nil :count 1)
    ("responsiblity" "responsibility" nil :count 2)
    ("resposne" "response" nil :count 2)
    ("resutl" "result" nil :count 2)
    ("retreive" "retrieve" nil :count 1)
    ("retuern" "return" nil :count 1)
    ("reuslt" "result" nil :count 2)
    ("reusme" "resume" nil :count 1)
    ("reutrn" "return" nil :count 13)
    ("reveiw" "review" nil :count 1)
    ("rihgt" "right" nil :count 1)
    ("rleease" "release" nil :count 1)
    ("runnign" "running" nil :count 1)
    ("rwo" "row" nil :count 1)
    ("saem" "same" nil :count 1)
    ("scannign" "scanning" nil :count 1)
    ("schedulign" "scheduling" nil :count 1)
    ("scirpt" "script" nil :count 2)
    ("scirpts" "scripts" nil :count 1)
    ("scoirng" "scoring" nil :count 1)
    ("scoppe" "scope" nil :count 1)
    ("scopr" "scope" nil :count 2)
    ("scropt" "script" nil :count 4)
    ("sctript" "script" nil :count 1)
    ("seciruty" "security" nil :count 1)
    ("seciton" "section" nil :count 2)
    ("secitons" "sections" nil :count 2)
    ("securit" "security" nil :count 3)
    ("securiyt" "security" nil :count 5)
    ("seesm" "seems" nil :count 2)
    ("sefl" "self" nil :count 7)
    ("segmentaiton" "segmentation" nil :count 1)
    ("seleciton" "selection" nil :count 2)
    ("seme" "seem" nil :count 4)
    ("sens" "sense" nil :count 2)
    ("separeted" "separated" nil :count 1)
    ("separetly" "separately" nil :count 1)
    ("sesisons" "sessions" nil :count 1)
    ("sessoin" "session" nil :count 1)
    ("setitng" "setting" nil :count 1)
    ("seveirt" "severity" nil :count 2)
    ("sffer" "suffer" nil :count 1)
    ("shoud" "should" nil :count 4)
    ("shoudl" "should" nil :count 25)
    ("shoudnt" "shouldn't" nil :count 1)
    ("showind" "showing" nil :count 1)
    ("shraed" "shared" nil :count 1)
    ("si" "is" nil :count 6)
    ("siad" "said" nil :count 3)
    ("sicne" "since" nil :count 4)
    ("siginficiatn" "significant" nil :count 1)
    ("signautre" "signature" nil :count 1)
    ("signautres" "signatures" nil :count 1)
    ("significatn" "significant" nil :count 1)
    ("simialr" "similar" nil :count 1)
    ("simialrly" "similarly" nil :count 1)
    ("singapore" "Singapore" nil :count 13)
    ("singel" "single" nil :count 2)
    ("sitll" "still" nil :count 2)
    ("situatioin" "situation" nil :count 1)
    ("skeletion" "skeleton" nil :count 1)
    ("slef" "self" nil :count 14)
    ("smae" "same" nil :count 2)
    ("smaple" "sample" nil :count 1)
    ("soemthing" "something" nil :count 10)
    ("solutino" "solution" nil :count 2)
    ("somehting" "something" nil :count 24)
    ("someitmes" "sometimes" nil :count 1)
    ("somethign" "something" nil :count 8)
    ("somethng" "something" nil :count 1)
    ("sometihng" "something" nil :count 1)
    ("someting" "something" nil :count 3)
    ("somewaht" "somewhat" nil :count 1)
    ("somsthing" "something" nil :count 1)
    ("sothat" "so that" nil :count 1)
    ("soundind" "sounding" nil :count 1)
    ("spawen" "spawn" nil :count 1)
    ("specfically" "specifically" nil :count 1)
    ("specificaition" "specification" nil :count 1)
    ("specificaiton" "specification" nil :count 1)
    ("specifid" "specific" nil :count 1)
    ("speical" "special" nil :count 1)
    ("sqashing" "squashing" nil :count 1)
    ("srue" "sure" nil :count 1)
    ("srves" "serves" nil :count 1)
    ("staitc" "static" nil :count 1)
    ("startign" "starting" nil :count 1)
    ("stduct" "struct" nil :count 1)
    ("stirng" "string" nil :count 17)
    ("stirngs" "strings" nil :count 2)
    ("storeage" "storage" nil :count 1)
    ("storign" "storing" nil :count 1)
    ("storytelilng" "storytelling" nil :count 1)
    ("strady" "steady" nil :count 1)
    ("stram" "stream" nil :count 2)
    ("striaght" "straight" nil :count 5)
    ("strign" "string" nil :count 6)
    ("strigns" "strings" nil :count 1)
    ("strust" "struct" nil :count 2)
    ("subelt" "subtle" nil :count 1)
    ("submisison" "submission" nil :count 1)
    ("submoduels" "submodules" nil :count 1)
    ("suew" "sure" nil :count 1)
    ("sufficinetly" "sufficiently" nil :count 1)
    ("summayr" "summary" nil :count 1)
    ("suppoer" "support" nil :count 1)
    ("suspet" "suspect" nil :count 1)
    ("suspiciionos" "suspicions" nil :count 1)
    ("sutructure" "structure" nil :count 1)
    ("switchign" "switching" nil :count 1)
    ("syetem" "system" nil :count 1)
    ("synchronisaton" "synchronisation" nil :count 1)
    ("systm" "system" nil :count 2)
    ("tabel" "table" nil :count 2)
    ("taht" "that" nil :count 85)
    ("taingint" "tainting" nil :count 1)
    ("takign" "taking" nil :count 1)
    ("taks" "task" nil :count 2)
    ("talbe" "table" nil :count 1)
    ("talkign" "talking" nil :count 1)
    ("tat" "that" nil :count 5)
    ("teasm" "teams" nil :count 1)
    ("techncial" "technical" nil :count 1)
    ("tehn" "then" nil :count 1)
    ("tehre" "there" nil :count 2)
    ("tempalte" "template" nil :count 3)
    ("tempaltes" "templates" nil :count 2)
    ("temporarrily" "temporarily" nil :count 1)
    ("tghat" "that" nil :count 1)
    ("th" "the" nil :count 47)
    ("thaat" "that" nil :count 1)
    ("thaty" "that" nil :count 5)
    ("thereform" "therefore" nil :count 1)
    ("theri" "their" nil :count 3)
    ("thging" "thing" nil :count 1)
    ("thhe" "the" nil :count 2)
    ("thiat" "that" nil :count 1)
    ("thier" "their" nil :count 11)
    ("thign" "thing" nil :count 6)
    ("thigns" "things" nil :count 24)
    ("thingks" "things" nil :count 1)
    ("thm" "them" nil :count 1)
    ("thnaks" "thanks" nil :count 1)
    ("thnanks" "thanks" nil :count 1)
    ("thnk" "think" nil :count 1)
    ("thoguh" "though" nil :count 1)
    ("thorugh" "through" nil :count 11)
    ("thoruhgout" "throughout" nil :count 1)
    ("thr" "the" nil :count 3)
    ("throught" "through" nil :count 1)
    ("throuhg" "through" nil :count 1)
    ("ths" "the" nil :count 15)
    ("thsi" "this" nil :count 6)
    ("thw" "the" nil :count 2)
    ("thwe" "the" nil :count 4)
    ("thwt" "that" nil :count 1)
    ("thwtwill" "that will" nil :count 1)
    ("ti" "it" nil :count 29)
    ("ti's" "it's" nil :count 1)
    ("tiem" "time" nil :count 2)
    ("tihs" "this" nil :count 1)
    ("tiral" "trial" nil :count 1)
    ("tkne" "token" nil :count 1)
    ("tlaking" "talking" nil :count 1)
    ("toherwise" "otherwise" nil :count 1)
    ("tokne" "token" nil :count 4)
    ("tood" "todo" nil :count 1)
    ("towartds" "towards" nil :count 1)
    ("traaining" "training" nil :count 1)
    ("traditiaonl" "traditional" nil :count 1)
    ("traditioinal" "traditional" nil :count 1)
    ("trainign" "training" nil :count 1)
    ("transaciton" "transaction" nil :count 1)
    ("transfomr" "transform" nil :count 2)
    ("transfomration" "transformation" nil :count 1)
    ("transfomring" "transforming" nil :count 1)
    ("transformatinon" "transformation" nil :count 1)
    ("transietn" "transient" nil :count 1)
    ("transinet" "transient" nil :count 15)
    ("transisent" "transient" nil :count 1)
    ("tremling" "trembling" nil :count 1)
    ("treu" "True" nil :count 3)
    ("triat" "trait" nil :count 1)
    ("triggerd" "triggered" nil :count 1)
    ("trivailly" "trivially" nil :count 1)
    ("tryign" "trying" nil :count 4)
    ("twce" "twice" nil :count 1)
    ("tyep" "type" nil :count 1)
    ("tyepes" "types" nil :count 1)
    ("tyhe" "the" nil :count 9)
    ("tyhen" "then" nil :count 1)
    ("typign" "Typing" nil :count 1)
    ("typingn" "typing" nil :count 1)
    ("typname" "typename" nil :count 1)
    ("tyring" "trying" nil :count 2)
    ("udpate" "update" nil :count 11)
    ("udpates" "updates" nil :count 1)
    ("udpating" "updating" nil :count 1)
    ("uesd" "used" nil :count 1)
    ("uhless" "unless" nil :count 1)
    ("uipate" "update" nil :count 1)
    ("uisng" "using" nil :count 7)
    ("unanticipate" "unanticipated" nil :count 1)
    ("underilne" "underline" nil :count 1)
    ("understanidng" "understanding" nil :count 1)
    ("unfortuantley" "unfortunately" nil :count 1)
    ("uninstallaiton" "uninstallation" nil :count 1)
    ("unknonw" "unknown" nil :count 1)
    ("unknwon" "unknown" nil :count 1)
    ("unpriviledged" "unprivileged" nil :count 1)
    ("unsaef" "unsafe" nil :count 1)
    ("unsinged" "unsigned" nil :count 2)
    ("unsurprigintly" "unsurprisingly" nil :count 1)
    ("unwarp" "unwrap" nil :count 4)
    ("unwrpa" "unwrap" nil :count 12)
    ("upadte" "update" nil :count 1)
    ("upate" "update" nil :count 3)
    ("updaet" "update" nil :count 19)
    ("updateing" "updating" nil :count 6)
    ("updatieng" "updating" nil :count 1)
    ("updtae" "update" nil :count 2)
    ("updte" "update" nil :count 1)
    ("uplaod" "upload" nil :count 3)
    ("uppar" "upper" nil :count 1)
    ("usig" "using" nil :count 1)
    ("usign" "using" nil :count 5)
    ("usiing" "using" nil :count 1)
    ("usnafe" "unsafe" nil :count 2)
    ("uspposed" "supposed" nil :count 1)
    ("ussue" "issue" nil :count 1)
    ("uuse" "use" nil :count 1)
    ("uwnrap" "unwrap" nil :count 3)
    ("vaidation" "validation" nil :count 1)
    ("vairables" "variables" nil :count 1)
    ("valeu" "value" nil :count 2)
    ("validat" "validate" nil :count 3)
    ("validateion" "validation" nil :count 1)
    ("valye" "value" nil :count 1)
    ("varaibles" "variables" nil :count 2)
    ("variablae" "variables" nil :count 1)
    ("variale" "variable" nil :count 1)
    ("variatn" "variant" nil :count 1)
    ("varibles" "variables" nil :count 1)
    ("varinat" "variant" nil :count 1)
    ("verion" "version" nil :count 1)
    ("verison" "version" nil :count 9)
    ("versionoing" "versioning" nil :count 1)
    ("versoin" "version" nil :count 1)
    ("victom" "victim" nil :count 1)
    ("virtal" "virtual" nil :count 1)
    ("virtul" "virtual" nil :count 1)
    ("vlaue" "value" nil :count 3)
    ("waht" "what" nil :count 5)
    ("wanring" "warning" nil :count 1)
    ("warnigns" "warnings" nil :count 3)
    ("watn" "want" nil :count 5)
    ("weapopn" "Weapon" nil :count 1)
    ("wehn" "when" nil :count 4)
    ("wehre" "where" nil :count 10)
    ("whcih" "which" nil :count 1)
    ("whcihsi" "which is" nil :count 1)
    ("whiel" "while" nil :count 1)
    ("whihc" "which" nil :count 18)
    ("whoel" "whole" nil :count 1)
    ("whwat" "what" nil :count 1)
    ("whwer" "where" nil :count 1)
    ("wiat" "wait" nil :count 1)
    ("wiating" "waiting" nil :count 1)
    ("wih" "with" nil :count 1)
    ("wiht" "with" nil :count 17)
    ("wihtin" "within" nil :count 3)
    ("wioudl" "would" nil :count 1)
    ("wlel" "well" nil :count 1)
    ("wnat" "want" nil :count 46)
    ("wnats" "wants" nil :count 1)
    ("wnhat" "what" nil :count 1)
    ("woild" "would" nil :count 1)
    ("womewhere" "somewhere" nil :count 1)
    ("workign" "working" nil :count 1)
    ("woudl" "would" nil :count 20)
    ("wpoch" "epoch" nil :count 1)
    ("wrok" "work" nil :count 1)
    ("wrory" "worry" nil :count 1)
    ("wrpaper" "Wrapper" nil :count 1)
    ("wtih" "with" nil :count 24)
    ("wtihin" "within" nil :count 2)
    ("wuld" "would" nil :count 1)
    ("wven" "even" nil :count 1)
    ("wwell" "well" nil :count 1)
    ("wya" "way" nil :count 7)
    ("yb" "by" nil :count 3)
    ("yeaterday" "yesterday" nil :count 1)
    ("yse" "yes" nil :count 1)
   ))

